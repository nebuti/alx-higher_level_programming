The ``2-matrix_divided.py`` module
======================

Using ``matrix_divided``
-------------------
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>>
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(matrix, 3.35))
[[0.3, 0.6, 0.9], [1.19, 1.49, 1.79]]
>>> print(matrix_divided(matrix, 'a'))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
    raise TypeError('div must be a number')
TypeError: div must be a number
>>> print(matrix_divided(matrix, 'holberton'))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
    raise TypeError('div must be a number')
TypeError: div must be a number

>>> matrix = [
...     ['a', 2, 3],
...     [1, 2, 4]
... ]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
    raise TypeError('matrix must be a matrix (list of lists) of integers/floats')
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [
...     [1, 2, 4],
...     [1, 2]
... ]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
    raise TypeError('Each row of the matrix must have the same size')
TypeError: Each row of the matrix must have the same size
>>> matrix = [[]]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
    raise TypeError('matrix must be a matrix (list of lists) of integers/floats')
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [1, 2, 3]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
    raise TypeError('matrix must be a matrix (list of lists) of integers/floats')
TypeError: matrix must be a matrix (list of lists) of integers/floats
